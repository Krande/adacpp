name: ci-ada-cpp-test

# bump 1
on:
  push:
    paths:
      - .github/workflows/basic_test.yaml

jobs:
  build_test:
    name: ada-cpp-${{ matrix.platform.name }}-${{ matrix.pyver.name }}
    runs-on: ${{ matrix.platform.distver }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        pyver: [
          { name: py311, distver: '3.11' },
        ]
        platform: [
#          { name: win, distver: windows-latest },
#          { name: linux, distver: ubuntu-latest },
          { name: macOS, distver: macos-latest }
        ]
    steps:
      - uses: actions/checkout@v3
      - name: Download and extract SDK
        if: ${{ matrix.platform.name == 'macOS' }}
        run: |
          curl -L https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.14.sdk.tar.xz | tar -xvf - -C $RUNNER_TEMP/
          ls -al $RUNNER_TEMP/

      - name: List MacOSX SDKs
        if: ${{ matrix.platform.name == 'macOS' }}
        run: |
          ls /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/
          ls /Applications/
        # Add ninja
      - name: Install ninja
        run: |
          if [[ "$OSTYPE" == "linux-gnu"* ]]; then
            sudo apt-get install ninja-build
          elif [[ "$OSTYPE" == "darwin"* ]]; then
            brew install ninja
          elif [[ "$OSTYPE" == "win32" ]]; then
            choco install ninja
          fi
      - uses: mamba-org/setup-micromamba@v1 # https://github.com/mamba-org/setup-micromamba
        with:
          channels: conda-forge
          environment-file: environment.build.yml
          create-args: >-
            python=${{ matrix.pyver.distver }}

      - name: build local packages
        run: |
          export CONDA_BUILD_SYSROOT=$RUNNER_TEMP/MacOSX10.14.sdk
          boa build conda --python ${{ matrix.pyver.distver }} -m ./conda/conda_build_config.yaml --no-remove-work-dir
