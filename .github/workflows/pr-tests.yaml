name: ci-ada-cpp-test

# bump 1
on:
  pull_request:
    branches:
      - main

# Use concurrency to ensure that only one instance of this workflow is running at a time
concurrency:
  group: pr-tests-${{ github.ref_name }}
  cancel-in-progress: true

env:
  CROOT_DIR: /home/runner/work/build
  ARTIFACTS_DIR: /home/runner/work/artifacts

jobs:
  build_test:
    name: ada-cpp-${{ matrix.platform.name }}-${{ matrix.pyver.name }}-${{ matrix.variant.name }}=${{ matrix.variant.value }}
    runs-on: ${{ matrix.platform.distver }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        pyver: [
          { name: py312, distver: '3.12' },
        ]
        platform: [
          { name: win, distver: windows-latest, pkg_dir: 'win-64' },
          { name: linux, distver: ubuntu-latest, pkg_dir: 'linux-64' },
          { name: macOS, distver: macos-13, pkg_dir: 'osx-64' }
        ]
        variant: [
          { name: occt, value: 'novtk' },
          { name: occt, value: 'all' }
        ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: set ENV WORK_DIR
        run: |
          pwd
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "PKG_DIR=win-64" >> $GITHUB_ENV
            echo "ARTIFACTS_DIR=D:/a/artifacts" >> $GITHUB_ENV
            echo "CROOT_DIR=D:/a/build" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "PKG_DIR=osx-64" >> $GITHUB_ENV
            echo "ARTIFACTS_DIR=/Users/runner/work/artifacts" >> $GITHUB_ENV
            echo "CROOT_DIR=/Users/runner/work/build" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            echo "PKG_DIR=linux-64" >> $GITHUB_ENV
          fi

      - name: Download and extract MacOSX SDK
        if: ${{ matrix.platform.name == 'macOS' }}
        run: |
          curl -L https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.15.sdk.tar.xz | tar -xvJf - -C /Users/runner/work/


      - uses: mamba-org/setup-micromamba@v1 # https://github.com/mamba-org/setup-micromamba
        with:
          environment-name: test-env
          cache-environment: true
          cache-downloads: true
          condarc: |
            conda-build:
              root-dir: ${{ env.CROOT_DIR }}
              output_folder: ${{ env.ARTIFACTS_DIR }}
              pkg_format: 2
              zstd_compression_level: 19
            channel_priority: strict
            channels:
              - conda-forge
          create-args: >-
            python=3.12
            boa

      - name: make dirs
        run: |
          mkdir -p ${{ env.ARTIFACTS_DIR }}
          mkdir -p ${{ env.CROOT_DIR }}

      - name: build local packages
        run: |
          conda mambabuild . --python ${{ matrix.pyver.distver }} --variants "{ '${{matrix.variant.name}}': '${{matrix.variant.value}}'}"
        working-directory: conda